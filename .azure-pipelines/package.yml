trigger:
  branches:
    include:
      - 4442-packaging

pool:
  vmImage: 'ubuntu-latest'
  
variables:
  os: 'linux'
  rustTarget: 'x86_64-unknown-linux-gnu'

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      addToPath: true
      architecture: 'x64'

  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'

  - script: python -m pip install pipenv
    displayName: 'Install pipenv'

  - script: pipenv requirements --dev | tee requirements.txt
    displayName: 'Create requirements.txt from Pipfile.lock'

  - script: pip install -r requirements.txt
    displayName: 'Install requirements'
    
  - bash: |
      export VERSION=$(cat austrakka/__init__.py | grep __version__ | cut -d "=" -f2 | cut -d "\"" -f2)
      echo "##vso[task.setvariable variable=cliVersion;]$VERSION"
    displayName: Get version
    
  - script: pipenv-setup sync
    displayName: 'Sync setup.py'

  - script: pyoxidizer build --verbose
    displayName: 'Build distributable'
    
  - task: ArchiveFiles@2
    displayName: 'Zip distributable'
    inputs:
      rootFolderOrFile: 'build/${{ variables.rustTarget }}/debug/install'
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/austrakka-cli-$(cliVersion)-${{ variables.os }}.zip'

  - task: PublishPipelineArtifact@1
    displayName: Publish Terraform variables
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/austrakka-cli-$(cliVersion)-${{ variables.os }}.zip'

