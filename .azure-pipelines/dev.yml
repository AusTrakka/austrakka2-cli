resources:
  repositories:
    - repository: CLI 
      type: github
      name: AusTrakka/austrakka2-cli
      ref: $(Build.SourceBranchName) 
      endpoint: AusTrakka
    - repository: Pipelines
      type: github
      name: AusTrakka/austrakka-pipelines
      ref: 5825-stage-templates
      endpoint: AusTrakka
    - repository: Infra
      type: github
      endpoint: AusTrakka
      name: AusTrakka/austrakka2-infra
      ref: $(infraBranch)
    - repository: Portal 
      type: github
      endpoint: AusTrakka
      name: AusTrakka/austrakka-portal
      ref: $(portalBranch)
      
trigger:
  branches:
    include:
      - Development

pr: none

pool:
  name: Test

variables:
  azureConnection: 'AusTrakka Dev (austrakka tenancy)'
  azureConnectionAdmin: 'AusTrakka Admin (austrakka tenancy)'
  backendAzureRmResourceGroupName: 'rg-devterf-shd-as-1'
  backendAzureRmStorageAccountName: 'stdevterfshdas1'
  backendAzureRmContainerName: 'env'
  backendAzureRmKey: '$(Build.DefinitionName)/$(Build.BuildNumber).tfstate'
  terraformOutputArtifact: 'TerraformOutput'
  terraformVarsArtifact: 'TerraformVars'
  buildDir: '$(Build.BinariesDirectory)/$(Build.BuildNumber)'
  sourceDir: '$(Pipeline.Workspace)/$(Build.BuildNumber)'

stages:
  # TODO: this whole page can be a template now
  - template: templates/stages/env/create.yml@Pipelines 
  - stage: RunTests
    jobs:
      - job: RunUnitTests
        steps:
          - template: templates/checkout/cli.yml@Pipelines
          - template: templates/checkout/infra.yml@Pipelines
          - task: PowerShell@2
            displayName: Generate .env file 
            inputs:
              targetType: 'inline'
              workingDirectory: $(sourceDir)/infra/scripts/output
              script: |
                ./cli_env_json.ps1 @(Get-ChildItem $(buildDir)/tf/*.json)[0].FullName > $(sourceDir)/cli/.env
          # TODO: will pipenv shell call install if it's the first time it's ran
          - task: Bash@3
            displayName: Run pytest 
            inputs:
              targetType: 'inline'
              workingDirectory: $(sourceDir)/cli
              script: |
                pipenv shell
                pipenv install --dev
                export AT_TOKEN=$(austrakka auth process)
                pytest
  - template: templates/stages/env/create.yml@Pipelines

